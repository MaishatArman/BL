#This code is Compressed by Sachin Shrivastv
#Github:- Sac56
#Whatsapp:- +977-9845844301
#Youtube:- Badshah Hacker
import base64, zlib
exec(zlib.decompress(base64.b64decode(''')))
